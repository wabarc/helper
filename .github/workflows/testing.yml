name: Testing

on:
  push:
    branches:
      - "*"
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/testing.yml"
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/testing.yml"
  workflow_dispatch:

permissions: write-all
jobs:
  test:
    name: Testing
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        go: [ "1.13", "1.14", "1.15", "1.16", "1.17", "1.18" ]

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go }}

    - name: Set up Tor
      uses: tor-actions/setup-tor@main
      with:
        daemon: true

    - name: Set up Chrome
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable

    - name: Set up Chocolatey
      if: matrix.os == 'windows-latest'
      uses: crazy-max/ghaction-chocolatey@v2
      with:
        args: -h

    - name: Install Packages
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        # search package https://pkgs.org/
        sudo add-apt-repository universe
        sudo apt-get -y -qq update
        sudo apt-get -y -qq install webp

    - name: Install Packages
      if: matrix.os == 'macos-latest'
      shell: bash
      run: |
        # search package https://brew.sh/
        brew install --quiet webp

    - name: Install Packages
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        # search package https://community.chocolatey.org/packages
        choco install --no-progress webp

    - name: Check out code base
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Check out code base
      if: github.event_name == 'pull_request'
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Cache go module
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: ${{ runner.os }}-go-

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Test
      env:
        CGO_ENABLED: 1
      run: |
        go clean -testcache
        go test -v -race -cover -coverprofile=coverage.out -covermode=atomic ./...
        go tool cover -func=coverage.out
      shell: bash
